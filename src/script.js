document.addEventListener("DOMContentLoaded", () => {
  const header = document.querySelector("header");
  header.addEventListener("click", () => {
    alert("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—à—É, Dmytro!");
  });

  const avatar = document.querySelector("section img");
  avatar.addEventListener("click", () => {
    alert("–¶–µ –º–æ—î —Ñ–æ—Ç–æ, –¥—è–∫—É—é –∑–∞ —É–≤–∞–≥—É!üòä");
  });
});
const toggleInfo = document.getElementById("toggleInfo");
const extraInfo = document.getElementById("extraInfo");

toggleInfo.addEventListener("click", () => {
  if (extraInfo.style.display === "none") {
    extraInfo.style.display = "block";
    toggleInfo.textContent = "–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏";
  } else {
    extraInfo.style.display = "none";
    toggleInfo.textContent = "–î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ";
  }
});
const form = document.querySelector("form");

form.addEventListener("submit", (e) => {
  e.preventDefault(); // –ó—É–ø–∏–Ω—è—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É –¥—ñ—é —Ñ–æ—Ä–º–∏

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ
  const name = form.querySelector('[name="name"]').value.trim();
  const email = form.querySelector('[name="email"]').value.trim();
  const message = form.querySelector('[name="message"]').value.trim();

  if (!name || !email || !message) {
    alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è!");
    return false;
  }

  // –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–æ—Ä–º—É
  fetch(form.action, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      name: name,
      email: email,
      message: message,
    }),
  })
    .then((response) => {
      if (response.ok) {
        alert("–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        form.reset(); // –û—á–∏—â–∞—î–º–æ —Ñ–æ—Ä–º—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è
      } else {
        alert("–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞. –ë—É–¥—å –ª–∞—Å–∫–∞, —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
      }
    })
    .catch((error) => {
      alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–æ—Ä–º—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à–µ –∑'—î–¥–Ω–∞–Ω–Ω—è.");
    });
});

document.addEventListener("DOMContentLoaded", () => {
  const menuToggle = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");

  menuToggle.addEventListener("click", () => {
    if (mobileMenu.style.display === "block") {
      mobileMenu.style.display = "none";
    } else {
      mobileMenu.style.display = "block";
    }
  });

  // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
  document.querySelectorAll("#mobile-menu a").forEach((link) => {
    link.addEventListener("click", () => {
      mobileMenu.style.display = "none";
    });
  });
});

// Task manager –¥–ª—è —Å–∞–π—Ç—É 
document.addEventListener("DOMContentLoaded", () => {
  const todoContainer = document.getElementById("todo-container");

  function getTasks() {
    return JSON.parse(localStorage.getItem("tasks")) || [];
  }

  function saveTasks(tasks) {
    localStorage.setItem("tasks", JSON.stringify(tasks));
  }

  function renderTasks() {
    todoContainer.innerHTML = "";
    const tasks = getTasks();

    tasks.forEach((task, index) => {
      const taskEl = document.createElement("div");
      taskEl.classList.add("todo-item");

      const input = document.createElement("input");
      input.type = "text";
      input.value = task.text;
      input.addEventListener("input", () => {
        tasks[index].text = input.value;
        saveTasks(tasks);
      });

      const removeBtn = document.createElement("button");
      removeBtn.textContent = "√ó";
      removeBtn.addEventListener("click", () => {
        tasks.splice(index, 1);
        saveTasks(tasks);
        renderTasks();
      });

      taskEl.appendChild(input);
      taskEl.appendChild(removeBtn);
      todoContainer.appendChild(taskEl);
    });
  }

  document.getElementById("todo").insertAdjacentHTML(
    "beforeend",
    `<button id="add-task">–î–æ–¥–∞—Ç–∏ –∑–∞–¥–∞—á—É</button>`
  );

  document.getElementById("add-task").addEventListener("click", () => {
    const tasks = getTasks();
    tasks.push({ text: "–ù–æ–≤–∞ –∑–∞–¥–∞—á–∞" });
    saveTasks(tasks);
    renderTasks();
  });

  renderTasks();
});
